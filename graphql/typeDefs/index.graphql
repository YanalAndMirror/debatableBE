# Custom Scalars
scalar Date

type Query {
  # Users
  users: [User]!
  user: User

  # Debates
  debates: [Debate]!
  debate(id: ID!): Debate

  "Get arguments by debate or argue"
  argues(filter: ArgueFilter): [Argue]
  argue(id: ID!): Argue
}

type Mutation {
  "create a new user"
  createUser(user: UserCreateInput!): userWithToken
  "update current user"
  updateUser(user: UserUpdateInput!): User
  "Sign in to user"
  signin(username: String!, password: String!): userWithToken
  "Create a new debate , with one main argue"
  createDebate(debate: DebateCreateInput!): Debate
  updateDebate(id: ID!, debate: DebateUpdateInput!): Debate!

  # Arguements
  createArgue(argue: ArgueCreateInput!): Argue!
  updateArgue(id: ID!, argue: ArgueUpdateInput!): Argue!
}
